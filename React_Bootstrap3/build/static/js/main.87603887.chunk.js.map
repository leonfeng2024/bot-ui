{"version":3,"sources":["App.js","index.js"],"names":["App","messages","setMessages","useState","text","isUser","userInput","setUserInput","loading","setLoading","error","setError","messagesEndRef","useRef","useEffect","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","_jsxs","className","children","_jsx","Navbar","bg","variant","Container","Brand","Row","Col","xs","md","lg","Card","Header","as","Body","map","message","index","dangerouslySetInnerHTML","__html","replace","url","Alert","ref","Footer","Form","onSubmit","async","e","preventDefault","trim","userMessage","prevMessages","response","axios","post","process","username","query","data","status","Error","err","console","Group","Control","rows","value","onChange","target","placeholder","disabled","Button","type","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87603887.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Container, Row, Col, Card, Form, Button, Alert, Navbar } from 'react-bootstrap';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([\n    { text: 'Hello! I am your AI assistant. How can I help you today?', isUser: false }\n  ]);\n  const [userInput, setUserInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const messagesEndRef = useRef(null);\n  const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:8000/chat';\n  const username = process.env.REACT_APP_USERNAME || 'user';\n\n  // Scroll to bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Format message text (convert URLs to links and handle line breaks)\n  const formatMessage = (text) => {\n    const urlRegex = /(https?:\\/\\/[^\\s]+)/g;\n    const formattedText = text\n      .replace(urlRegex, (url) => `<a href=\"${url}\" target=\"_blank\" rel=\"noopener noreferrer\">${url}</a>`)\n      .replace(/\\n/g, '<br />');\n    \n    return { __html: formattedText };\n  };\n\n  // Send message to API\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    \n    if (!userInput.trim() || loading) return;\n    \n    // Add user message to chat\n    const userMessage = userInput.trim();\n    setMessages(prevMessages => [...prevMessages, { text: userMessage, isUser: true }]);\n    setUserInput('');\n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Call API\n      const response = await axios.post(apiUrl, {\n        username: username,\n        query: userMessage\n      });\n      \n      // Check response status\n      if (response.data.status === 'success') {\n        // Add bot response to chat\n        setMessages(prevMessages => [\n          ...prevMessages, \n          { text: response.data.message || 'Sorry, I could not process your request.', isUser: false }\n        ]);\n      } else {\n        throw new Error(response.data.message || 'Unknown error');\n      }\n    } catch (err) {\n      console.error('Error calling API:', err);\n      setError('Sorry, there was an error processing your request. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Navbar bg=\"primary\" variant=\"dark\" className=\"mb-4\">\n        <Container>\n          <Navbar.Brand>Chatbot Interface</Navbar.Brand>\n        </Container>\n      </Navbar>\n\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col xs={12} md={10} lg={8}>\n            <Card className=\"chat-container\">\n              <Card.Header as=\"h5\">Chat with AI Assistant</Card.Header>\n              <Card.Body className=\"chat-messages\">\n                {messages.map((message, index) => (\n                  <div \n                    key={index} \n                    className={`message ${message.isUser ? 'user-message' : 'bot-message'}`}\n                  >\n                    <div className=\"message-sender\">\n                      {message.isUser ? 'You' : 'AI Assistant'}\n                    </div>\n                    <div \n                      className=\"message-content\"\n                      dangerouslySetInnerHTML={formatMessage(message.text)}\n                    />\n                  </div>\n                ))}\n                {loading && (\n                  <div className=\"text-center my-3\">\n                    <div className=\"spinner\"></div>\n                  </div>\n                )}\n                {error && (\n                  <Alert variant=\"danger\" className=\"mt-3\">\n                    {error}\n                  </Alert>\n                )}\n                <div ref={messagesEndRef} />\n              </Card.Body>\n              <Card.Footer>\n                <Form onSubmit={sendMessage}>\n                  <Form.Group>\n                    <Form.Control\n                      as=\"textarea\"\n                      rows={2}\n                      value={userInput}\n                      onChange={(e) => setUserInput(e.target.value)}\n                      placeholder=\"Type your message here...\"\n                      disabled={loading}\n                    />\n                  </Form.Group>\n                  <div className=\"d-flex justify-content-end mt-2\">\n                    <Button \n                      variant=\"primary\" \n                      type=\"submit\"\n                      disabled={!userInput.trim() || loading}\n                    >\n                      Send\n                    </Button>\n                  </div>\n                </Form>\n              </Card.Footer>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); "],"sourceRoot":""}